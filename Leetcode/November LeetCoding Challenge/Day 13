/*
// Definition for a Node.
class Node {
public:
    int val;
    Node* left;
    Node* right;
    Node* next;

    Node() : val(0), left(NULL), right(NULL), next(NULL) {}

    Node(int _val) : val(_val), left(NULL), right(NULL), next(NULL) {}

    Node(int _val, Node* _left, Node* _right, Node* _next)
        : val(_val), left(_left), right(_right), next(_next) {}
};
*/

class Solution {
public:
    void pointNodes(Node* leftmost) {
        Node* pointer = leftmost;
        while(pointer != NULL) {
            pointer->left->next = pointer->right;
            if(pointer->next != NULL) {
                pointer->right->next = pointer->next->left;
                
            }
            pointer = pointer->next;
        }
    }
public:
    Node* connect(Node* root) {
        Node* leftmost = root;
        while(leftmost != NULL && leftmost->left != NULL) {
            pointNodes(leftmost);
            leftmost = leftmost->left;
        }
        return root;
    }
};

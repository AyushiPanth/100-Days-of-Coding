class Solution {
public:
    bool minimumCheck(vector<int>& nums, int threshold, int divisor) {
        int sum = 0;
        for(int i = 0; i < nums.size(); i++) {
            if(nums[i] % divisor == 0)
                sum += nums[i] / divisor;
            else 
                sum += nums[i] / divisor + 1;
        }
        if(sum <= threshold)
            return true;
        else 
            return false;
    }
public:
    int smallestDivisor(vector<int>& nums, int threshold) {
        sort(nums.begin(), nums.end());
        int low = 1;
        int high = nums[nums.size() - 1];
        int mid = 0;
        while(low < high) {
            mid = (low + high) / 2;
            if(minimumCheck(nums, threshold, mid) == true)
                high = mid;
            else
                low = mid + 1;
        }
        return high;
    }
};

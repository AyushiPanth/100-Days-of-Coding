/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int max(int a, int b) {
        return a > b ? a : b;
    }
public:
    int min(int a, int b) {
        return a > b ? b : a;
    }
public:
    int maxAncestorDiff(TreeNode* root) {
        return dfs(root, root->val, root->val);
    }
public:
    int dfs(TreeNode* root, int minimum, int maximum) {
        if(root == NULL)
            return maximum - minimum;
        maximum = max(maximum, root->val);
        minimum = min(minimum, root->val);
        return max(dfs(root->left, minimum, maximum), dfs(root->right, minimum, maximum));
    }
};
